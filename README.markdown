Design de Testes para o Formul√°rio de Carteira de Motorista - Sprint 2 TripleTen

Vis√£o Geral

Este projeto foi desenvolvido como parte do Sprint 2 do Bootcamp de An√°lise de QA da TripleTen. O objetivo foi projetar testes para o formul√°rio "Adicionar carteira de motorista" do aplicativo Urban Routes, especificamente para o recurso de compartilhamento de carros. A tarefa envolveu a cria√ß√£o de classes de equival√™ncia, valores-limite e casos de teste para garantir a valida√ß√£o correta dos campos do formul√°rio, com foco no campo "Nome".

Objetivos do Projeto





Definir classes de equival√™ncia e valores-limite: Analisar os requisitos do formul√°rio "Adicionar carteira de motorista" para os campos "Nome", "Sobrenome" e "Data de nascimento", identificando classes de equival√™ncia e valores-limite, incluindo cen√°rios positivos e negativos.



Escrever casos de teste: Desenvolver casos de teste detalhados para o campo "Nome", baseados nos valores de teste escolhidos, para verificar o comportamento do formul√°rio em diferentes condi√ß√µes.



Documentar no modelo fornecido: Preencher as abas "Classes de equival√™ncia" e "Casos de teste" no modelo do Google Sheets, garantindo clareza e organiza√ß√£o na documenta√ß√£o.

Metodologia





An√°lise dos Requisitos:





Li a se√ß√£o "Adicionar carteira de motorista" dos requisitos do Urban Routes para entender as regras de valida√ß√£o dos campos "Nome", "Sobrenome" e "Data de nascimento".



Identifiquei os crit√©rios de aceita√ß√£o, como formatos aceit√°veis, limites de caracteres e restri√ß√µes (ex.: apenas letras para o campo "Nome").



Defini√ß√£o de Classes de Equival√™ncia e Valores-Limite:





Para cada campo ("Nome", "Sobrenome" e "Data de nascimento"), defini classes de equival√™ncia para cen√°rios positivos (ex.: entradas v√°lidas) e negativos (ex.: entradas inv√°lidas, como n√∫meros ou caracteres especiais no campo "Nome").



Determinei valores-limite para cen√°rios aplic√°veis, como comprimento m√≠nimo e m√°ximo de caracteres ou datas v√°lidas/inv√°lidas.



Registrei as classes e valores de teste na aba "Classes de equival√™ncia" do modelo do Google Sheets.



Escrita de Casos de Teste:





Com base nos valores de teste escolhidos para o campo "Nome", escrevi casos de teste detalhados na aba "Casos de teste" do modelo.



Cada caso de teste incluiu:





ID: Identificador √∫nico.



Nome do Caso de Teste: Descri√ß√£o do cen√°rio testado.



Pr√©-condi√ß√£o: Estado inicial (ex.: formul√°rio aberto).



Descri√ß√£o da Etapa: A√ß√µes a serem executadas (ex.: inserir um nome v√°lido).



Resultado Esperado: Comportamento esperado do sistema (ex.: aceita√ß√£o ou rejei√ß√£o do input).



Considerei cen√°rios positivos (ex.: nome v√°lido com letras) e negativos (ex.: nome com n√∫meros ou vazio).



Documenta√ß√£o:





Preenchi o modelo do Google Sheets, nomeando-o como "[Seu Nome], [Sobrenome], [Grupo] ‚Äî 2¬∫ sprint".



Assegurei que a documenta√ß√£o fosse clara, organizada e seguisse as instru√ß√µes fornecidas.



Configurei o compartilhamento do arquivo para "Qualquer um com o link" com permiss√£o para comentar.

Ferramentas Utilizadas





Google Sheets: Para documentar classes de equival√™ncia e casos de teste no modelo fornecido.



Urban Routes: Aplicativo refer√™ncia para an√°lise dos requisitos do formul√°rio.

Estrutura do Reposit√≥rio





Design de Testes - Urban Routes.xlsx: Modelo preenchido com as classes de equival√™ncia e casos de teste (copiado e nomeado como "[Seu Nome], [Sobrenome], [Grupo] ‚Äî 2¬∫ sprint").



README.md: Este arquivo, descrevendo o projeto.

Resultados





Defini classes de equival√™ncia e valores-limite para os campos "Nome", "Sobrenome" e "Data de nascimento", cobrindo cen√°rios positivos e negativos.



Escrevi casos de teste detalhados para o campo "Nome", garantindo que todos os cen√°rios relevantes fossem abordados.



Documentei tudo de forma clara e estruturada no modelo do Google Sheets, facilitando a revis√£o e uso futuro pela equipe de QA.

Sobre Mim

Sou um profissional em transi√ß√£o de carreira para a √°rea de Qualidade de Software, com forma√ß√£o no Bootcamp de An√°lise de QA da TripleTen. Minha experi√™ncia pr√©via em ambientes din√¢micos me proporcionou habilidades como aten√ß√£o aos detalhes, organiza√ß√£o e colabora√ß√£o. Estou comprometido em aplicar meus conhecimentos em QA para garantir a qualidade de produtos digitais e continuar evoluindo na √°rea de tecnologia.

Contato





- üìç S√£o Paulo, Brasil
- üìß luis_commans@hotmail.com
- üîó https://www.linkedin.com/in/danilocommansqa
- üíª https://github.com/MrCommans

Obrigado por visitar meu reposit√≥rio! üöñ
- **Google Sheets**: Para documentar classes de equival√™ncia e casos de teste no modelo fornecido.
- **Urban Routes**: Aplicativo refer√™ncia para an√°lise dos requisitos do formul√°rio.

## Estrutura do Reposit√≥rio

- `Design de Testes - Urban Routes.xlsx
